:root {
  --surface-0: hsl(229, 41%, 5%);
  --surface-1: hsl(229, 25%, 12%);
  /* color of input box */
  --surface-2: #9099f0;
  /* color of text in inputs */
  --text-1: #f3eff6;
  --text-2: hsl(229, 12%, 66%);
  --required: hsl(321, 32%, 56%);
  --accent: hsl(262, 84%, 52%);
  /* first parameter: how thick the border is, second: style of border, third: color of border */
  --border: 0.5px solid #6d3feb;
}

* {
  /* styling of all elements */
  box-sizing: border-box;
  margin: 0;
}

body {
  /* apply following styling for the entire body */
  font-family: "Radio Canada", sans-serif;
  font-size: 1.125rem;
  line-height: 1.6;

  background-color: var(--surface-0);
  color: var(--text-1);
  /* This adds padding at the top of the body element */
  padding-block-start: 10vb;
}

h1 {
  font-size: 4rem;
  font-weight: 300;
  line-height: 1;
}

a {
  color: hsl(from var(--accent) h s 80%);
}

button,
input,
textarea,
select {
  font: inherit;
}

form {
  display: grid;
  gap: 1rem;
  /* create two columns when width is more than 720px, otherwise keep one column */
  @media (width > 720px) {
    grid-template-columns: 1fr 1fr;
  }
}

.form-group {
  display: grid;
}

label {
  /* Ensure that text in labels of inputs are uppercase*/
  text-transform: uppercase;
  /* if html document has xy font-size, with 1rem it ensures that font-size is the same */
  font-size: 1rem;
}

.fine-print {
  text-transform: revert;
  line-height: 1.4;
}

.contact-form {
  display: grid;
  gap: 1rem;

  background-color: var(--surface-1);
  padding: 3rem;
  border-radius: 24px;
  width: min(100% - 4rem, 1200px);
  margin-inline: auto;
}

input {
  /* var(--) are custom CSS properties which needs to be defined earlier in this code */
  background: var(--surface-2);
  color: var(--text-1);
  border: var(--border);
  /* zaoblenie ramika  */
  border-radius: 16px;
  /* the space inside the input, between the content and the border */
  /* 1ex = top and bottom, 2ex = right and left */
  padding: 1ex 2ex;
  /* if we would not set the width to 100%, then with smaller screen resolution the inputs
  will overflow the parent element contact-form
  with 100% width the inputs will automatically shrink based on parent div contact-form width 
  but we cannot apply 100% width to all inputs because it will affect also input type checkbox*/
}

/* previously within input we set the width to 100%. Which means that input type checkbox
is also affected. It ended with huge square checkbox.
so, we want to apply width 100% for all inputs except for input type="checkbox"
so we use following: */
input:not([type="checkbox"]){
    width: 100%;
}

/* style the checkbox
firstly find class form-group and then check element which has class fine-print in it
it will style the label element */
.form-group:has(.fine-print) {
  /* with 1/-1 it will stretch the entire width of the parent .form-group it has */
  grid-column: 1/-1;
  /* to style checkbox (input element), we need to set this as display flex */
  display: flex;
}



/* styling the position of the button we need to access it through its parent */
.contact-form button {
  justify-self: start;
}

button {
  cursor: pointer;
  background-color: var(--accent);
  color: var(--text-1);
  padding: 1em 1.5em;
  border: 0;
  border-radius: 16px;

  &:hover,
  &:focus-visible {
    background-color: hsl(from var(--accent) h s 30%);
  }
}
